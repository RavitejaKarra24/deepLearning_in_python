In the Layer_Dense class, the backward method is responsible for the backward pass, which computes the gradients of the weights, biases, and inputs with respect to the loss. It takes dvalues as input, which represents the gradient of the loss with respect to the output of the current layer.

Here's a step-by-step explanation of the backward method in the Layer_Dense class:

def backward(self, dvalues):
    # Gradients on parameters
    self.dweights = np.dot(self.inputs.T, dvalues)
    self.dbiases = np.sum(dvalues, axis=0, keepdims=True)
    # Gradient on values
    self.dinputs = np.dot(dvalues, self.weights.T)

